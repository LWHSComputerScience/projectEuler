__author__ = 'samschickler'
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""


def fib(n):
    if n == 1 or n == 2:
        return 1  # first two in natural sequence are 1,1
    elif n > 2:
        x = fib(n - 1) + fib(n - 2)  # recursive is slower, but I don't have iterative
        return x


def main():
    val = 0  # final value should start 'null'
    x = 3
    while fib(x) <= 4000000:
        val += fib(x)
        x += 3
    print(val)
if __name__ == "__main__":
    main()
